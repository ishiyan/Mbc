<Window x:Class="Mbcsh5view.Contents"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Mbcsh5view"
    Title="Mbcsh5view"
    SizeToContent="Width" Height="600" MaxWidth="1900" MaxHeight="1600" AllowDrop="True" KeyDown="WindowKeyDown"
    DragOver="WindowDragOver" Drop="WindowDrop">
    <!-- ReSharper disable InconsistentNaming -->

    <Window.Resources>
        <Style x:Key="mainGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{x:Static SystemColors.WindowBrush}" />
        </Style>

        <Style x:Key="stackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="buttonStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Width" Value="24" />
        </Style>

        <Style x:Key="contentViewToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Style.Resources>
                <Path Margin="2" x:Key="pathList" Fill="{x:Static SystemColors.ControlTextBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Data="M0,0H10V2H0ZM0,4H10V6H0ZM0,8H10V10H0Z" />
                <Path Margin="2" x:Key="pathTree" Fill="{x:Static SystemColors.ControlTextBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                  Data="M0,0H10V2H0ZM3,2V6H10V4H5V2ZM6,6V10H10V8H8V6Z" />
            </Style.Resources>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsThreeState" Value="False" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="{StaticResource pathList}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="{StaticResource pathTree}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="listItemStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsDataSet}" Value="False">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsParsed}" Value="False">
                    <Setter Property="FontStyle" Value="Italic"/>
                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                    <Setter Property="Foreground" Value="#ff0000"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="listItemTemplate">
            <TextBlock Text="{Binding Path=Path}" Style="{StaticResource listItemStyle}"/>
        </DataTemplate>

        <Style x:Key="listBoxStyle" TargetType="ListBox" >
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <!-- Setter Property="Height" Value="Auto" / -->
            <Setter Property="Margin" Value="0" />
            <Setter Property="AlternationCount" Value="1"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <StaticResource ResourceKey="listItemTemplate"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        </Style>

        <Style x:Key="treeItemStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsDataSet}" Value="False">
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsParsed}" Value="False">
                    <Setter Property="FontStyle" Value="Italic"/>
                    <Setter Property="TextDecorations" Value="Strikethrough"/>
                    <Setter Property="Foreground" Value="#ff0000"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <HierarchicalDataTemplate ItemsSource="{Binding Items}" x:Key="treeItemTemplate">
            <TextBlock Text="{Binding Path=Label}" Style="{StaticResource treeItemStyle}"/>
        </HierarchicalDataTemplate>

        <Style x:Key="treeViewStyle" TargetType="{x:Type TreeView}">
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <!-- Setter Property="Height" Value="Auto" / -->
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <StaticResource ResourceKey="treeItemTemplate"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="dataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Margin" Value="1,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="fileSizeTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="4,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="sampleCountTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="contentTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="4,0,0,0" />
        </Style>

        <Style x:Key="stepRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="stepToggleRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="IsThreeState" Value="False" />
            <Setter Property="GroupName" Value="step" />
        </Style>

        <Style x:Key="pushButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="lightboxBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#90000000" />
        </Style>
        <Style x:Key="lightboxDialogBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="AliceBlue" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="CornerRadius" Value="10,0,10,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect Color="Black" Opacity="0.5" Direction="270" ShadowDepth="0.7" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="lightboxButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style x:Key="lightboxTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="lightboxTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="lightboxCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="IsThreeState" Value="False" />
        </Style>
        <Style x:Key="lightboxProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Height" Value="20" />
        </Style>

        <local:RowNumberConverter x:Key="rowNumberConverter" />
    </Window.Resources>

    <Grid>
        <Grid Name="mainGrid" Style="{DynamicResource mainGridStyle}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="22"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>
            <StackPanel Style="{DynamicResource stackPanelStyle}" Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0">
                <ToggleButton Name="contentsViewToggle" Style="{DynamicResource contentViewToggleButtonStyle}" IsChecked="True" Checked="ContentsViewToggleChecked" Unchecked="ContentsViewToggleUnchecked" />
                <TextBlock Name="fileSizeTextBlock" Style="{DynamicResource fileSizeTextBlockStyle}" Text="9999999999999 bytes" />
            </StackPanel>
            <StackPanel Style="{DynamicResource stackPanelStyle}" Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2">
                <TextBlock Name="sampleCountTextBlock" Style="{DynamicResource sampleCountTextBlockStyle}" Text="# n" />
                <TextBlock Name="timeRangeTextBlock" Style="{DynamicResource contentTextBlockStyle}" Text="⋲ 1 ÷ 2" />
            </StackPanel>
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0">
                <ListBox Style="{DynamicResource listBoxStyle}" Name="contentsListBox" Visibility="Visible" SelectionChanged="ContentsListBoxSelectionChanged" />
                <TreeView Style="{DynamicResource treeViewStyle}" Name="contentsTreeView" HorizontalAlignment="Left" Width="Auto" Visibility="Collapsed" SelectedItemChanged="ContentsTreeViewSelectedItemChanged"/>
            </Grid>
            <DataGrid Name="dataGrid" Style="{DynamicResource dataGridStyle}" Width="Auto" IsReadOnly="True" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="FullRow" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" Grid.Row="1" Grid.Column="1" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" ScrollViewer.IsDeferredScrollingEnabled="True" ScrollViewer.CanContentScroll="True" IsSynchronizedWithCurrentItem="True" EnableRowVirtualization="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ordinal" IsReadOnly="True">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource rowNumberConverter}">
                                <Binding /> <!-- important! -->
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Style="{DynamicResource buttonStackPanelStyle}" VerticalAlignment="Bottom" Orientation="Vertical" Grid.Row="1" Grid.Column="2">
                <RepeatButton Name="stepBack" Content="▲" Style="{DynamicResource stepRepeatButtonStyle}" Click="StepBackClick" />
                <RadioButton Name="stepYear" Content="y" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepYearChecked"/>
                <RadioButton Name="stepMonth" Content="m" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepMonthChecked"/>
                <RadioButton Name="stepWeek" Content="w" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepWeekChecked"/>
                <RadioButton Name="stepDay" Content="d" IsChecked="True" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepDayChecked"/>
                <RadioButton Name="stepHour" Content="h" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepHourChecked"/>
                <RadioButton Name="stepMinute" Content="m" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepMinuteChecked"/>
                <RadioButton Name="stepSecond" Content="s" IsChecked="False" Style="{DynamicResource stepToggleRadioButtonStyle}" Checked="StepSecondChecked"/>
                <RepeatButton Name="stepForth" Content="▼" Style="{DynamicResource stepRepeatButtonStyle}" Click="StepForthClick" />
                <Button Style="{DynamicResource pushButtonStyle}" Content="◙" Click="GotoLightBoxClick"/>
                <Button Style="{DynamicResource pushButtonStyle}" Content="■" Click="ExportCsvLightBoxClick"/>
                <Button Style="{DynamicResource pushButtonStyle}" Content="♣" Click="SkinButtonClick"/>
            </StackPanel>
        </Grid>
        <Grid Name="gotoGrid" Visibility="Collapsed">
            <Border Style="{DynamicResource lightboxBorderStyle}">
                <Border Style="{DynamicResource lightboxDialogBorderStyle}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Calendar Name="datePicker" FirstDayOfWeek="Monday" IsTodayHighlighted="False"/>
                        <CheckBox Style="{DynamicResource lightboxCheckBoxStyle}" Name="gotoRememberSelectedDateCheckBox" Content="remember selected date" IsThreeState="False" Grid.Row="1"/>
                        <UniformGrid Grid.Row="2" Margin="5" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Content="goto" Style="{DynamicResource lightboxButtonStyle}" Click="GotoGridOkButtonClick" />
                            <Button Content="cancel" Style="{DynamicResource lightboxButtonStyle}" Click="GotoGridCancelButtonClick" />
                        </UniformGrid>
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <Grid Name="exportCsvGrid" Visibility="Collapsed">
            <Border Style="{DynamicResource lightboxBorderStyle}">
                <Border Style="{DynamicResource lightboxDialogBorderStyle}">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Name="csvHeaderLineCheckBox" Style="{DynamicResource lightboxCheckBoxStyle}" Content="header line" IsThreeState="False" Grid.Row="0"/>
                        <TextBox Name="csvHeaderLineTextBox" Style="{DynamicResource lightboxTextBoxStyle}" Grid.Row="1"/>
                        <TextBlock Style="{DynamicResource lightboxTextBlockStyle}" Text="time format" Grid.Row="2"/>
                        <TextBox Name="csvTimeFormatTextBox" Style="{DynamicResource lightboxTextBoxStyle}" Grid.Row="3"/>
                        <TextBlock Style="{DynamicResource lightboxTextBlockStyle}" Text="csv file" Grid.Row="4"/>
                        <TextBox Name="csvFileTextBox" Style="{DynamicResource lightboxTextBoxStyle}" Grid.Row="5" TextChanged="CsvFileTextBoxTextChanged"/>
                        <UniformGrid Grid.Row="6" Margin="5" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Button Content="export" Style="{DynamicResource lightboxButtonStyle}" Click="ExportCsvGridOkButtonClick" Name="exportCsvGridOkButton" />
                            <Button Content="cancel" Style="{DynamicResource lightboxButtonStyle}" Click="ExportCsvGridCancelButtonClick" />
                        </UniformGrid>
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <Grid Name="progressGrid" Visibility="Collapsed">
            <Border Style="{DynamicResource lightboxBorderStyle}">
                    <Grid Margin="10" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                    <ProgressBar Name="progressBar" Style="{DynamicResource lightboxProgressBarStyle}" Value="{Binding Path=ProgressValue}" HorizontalAlignment="Stretch" Grid.Row="0"/>
                        <Button Content="abort" Style="{DynamicResource lightboxButtonStyle}" Click="ProgressGridCancelButtonClick" HorizontalAlignment="Center" Grid.Row="1" />
                    </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
